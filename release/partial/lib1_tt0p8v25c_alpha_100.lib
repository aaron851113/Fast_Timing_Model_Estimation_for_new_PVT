library (lib1_tt0p8v25c_alpha_100) {
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 0.8);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.75;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 0.8;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 0.5;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (tt0p8v25c) {
    process : 1;
    temperature : 25;
    voltage : 0.8;
  }
  default_operating_conditions : tt0p8v25c;
  lu_table_template (delay_template_generic_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  power_lut_template (power_template_generic_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  cell (AN2AM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112104;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0010113;
      rise_capacitance : 0.00100158;
      fall_capacitance : 0.0010113;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00127852;
      rise_capacitance : 0.00127852;
      fall_capacitance : 0.0012693;
    }
  }
  cell (AN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.115718;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00179545;
      rise_capacitance : 0.00178124;
      fall_capacitance : 0.00179545;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00197906;
      rise_capacitance : 0.00197906;
      fall_capacitance : 0.00193505;
    }
  }
  cell (AN3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.114327;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00171696;
      rise_capacitance : 0.00170114;
      fall_capacitance : 0.00171696;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00182479;
      rise_capacitance : 0.00180663;
      fall_capacitance : 0.00182479;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00188567;
      rise_capacitance : 0.00188567;
      fall_capacitance : 0.00185386;
    }
  }
  cell (AN4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C&D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.111807;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00160532;
      rise_capacitance : 0.00159747;
      fall_capacitance : 0.00160532;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0017165;
      rise_capacitance : 0.0016935;
      fall_capacitance : 0.0017165;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00179836;
      rise_capacitance : 0.00177049;
      fall_capacitance : 0.00179836;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00182838;
      rise_capacitance : 0.00182838;
      fall_capacitance : 0.00181001;
    }
  }
  cell (AO211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012693;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000492941;
      rise_capacitance : 0.000492941;
      fall_capacitance : 0.000488736;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000529536;
      rise_capacitance : 0.000529536;
      fall_capacitance : 0.000524113;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00052469;
      rise_capacitance : 0.00052469;
      fall_capacitance : 0.000517678;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00051881;
      rise_capacitance : 0.00051881;
      fall_capacitance : 0.000511498;
    }
  }
  cell (AO21M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00595682;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000448846;
      rise_capacitance : 0.000448846;
      fall_capacitance : 0.000445332;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000459439;
      rise_capacitance : 0.000459439;
      fall_capacitance : 0.00045429;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000549483;
      rise_capacitance : 0.000549483;
      fall_capacitance : 0.000534447;
    }
  }
  cell (AO221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132756;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000469119;
      rise_capacitance : 0.000469119;
      fall_capacitance : 0.000465227;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000480672;
      rise_capacitance : 0.000480672;
      fall_capacitance : 0.000474935;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000471387;
      rise_capacitance : 0.000471387;
      fall_capacitance : 0.00046759;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00048509;
      rise_capacitance : 0.00048509;
      fall_capacitance : 0.000480804;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565295;
      rise_capacitance : 0.000565295;
      fall_capacitance : 0.000555053;
    }
  }
  cell (AO222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|(C1&C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126448;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00048218;
      rise_capacitance : 0.00048218;
      fall_capacitance : 0.000473612;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000509901;
      rise_capacitance : 0.000509901;
      fall_capacitance : 0.000499683;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000460522;
      rise_capacitance : 0.000460522;
      fall_capacitance : 0.000455609;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498383;
      rise_capacitance : 0.000498383;
      fall_capacitance : 0.00049367;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000468943;
      rise_capacitance : 0.000465288;
      fall_capacitance : 0.000468943;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000512434;
      rise_capacitance : 0.000512434;
      fall_capacitance : 0.000510538;
    }
  }
  cell (AO22M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00581923;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000532118;
      rise_capacitance : 0.000532118;
      fall_capacitance : 0.000526015;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000545261;
      rise_capacitance : 0.000545261;
      fall_capacitance : 0.000534406;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000491219;
      rise_capacitance : 0.000485355;
      fall_capacitance : 0.000491219;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000467741;
      rise_capacitance : 0.000465095;
      fall_capacitance : 0.000467741;
    }
  }
  cell (AO31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128935;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553729;
      rise_capacitance : 0.000550043;
      fall_capacitance : 0.000553729;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000509522;
      rise_capacitance : 0.000504549;
      fall_capacitance : 0.000509522;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000604241;
      rise_capacitance : 0.000603333;
      fall_capacitance : 0.000604241;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000625188;
      rise_capacitance : 0.000625188;
      fall_capacitance : 0.000601688;
    }
  }
  cell (AO32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128035;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00055561;
      rise_capacitance : 0.000551829;
      fall_capacitance : 0.00055561;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000518434;
      rise_capacitance : 0.000514398;
      fall_capacitance : 0.000518434;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000593116;
      rise_capacitance : 0.000593116;
      fall_capacitance : 0.000593047;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000589528;
      rise_capacitance : 0.000589528;
      fall_capacitance : 0.000582461;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000582001;
      rise_capacitance : 0.000582001;
      fall_capacitance : 0.000573156;
    }
  }
  cell (AO33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2&B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0124608;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000591895;
      rise_capacitance : 0.000591895;
      fall_capacitance : 0.000590361;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000551952;
      rise_capacitance : 0.000551952;
      fall_capacitance : 0.000551934;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000519412;
      rise_capacitance : 0.000519412;
      fall_capacitance : 0.000515002;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000575368;
      rise_capacitance : 0.000570476;
      fall_capacitance : 0.000575368;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000528052;
      rise_capacitance : 0.000523195;
      fall_capacitance : 0.000528052;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000562035;
      rise_capacitance : 0.000562035;
      fall_capacitance : 0.000561968;
    }
  }
  cell (AOI211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334603;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00056081;
      rise_capacitance : 0.000557519;
      fall_capacitance : 0.00056081;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000560271;
      rise_capacitance : 0.000558139;
      fall_capacitance : 0.000560271;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517651;
      rise_capacitance : 0.000517651;
      fall_capacitance : 0.000508851;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00051903;
      rise_capacitance : 0.00051903;
      fall_capacitance : 0.000500551;
    }
  }
  cell (AOI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0511404;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00410676;
      rise_capacitance : 0.0040479;
      fall_capacitance : 0.00410676;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00434074;
      rise_capacitance : 0.00430659;
      fall_capacitance : 0.00434074;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00395146;
      rise_capacitance : 0.00395146;
      fall_capacitance : 0.00376955;
    }
  }
  cell (AOI31M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00213524;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000459162;
      rise_capacitance : 0.000456261;
      fall_capacitance : 0.000459162;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00043425;
      rise_capacitance : 0.000429904;
      fall_capacitance : 0.00043425;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430415;
      rise_capacitance : 0.000429767;
      fall_capacitance : 0.000430415;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000575551;
      rise_capacitance : 0.000575551;
      fall_capacitance : 0.000546367;
    }
  }
  cell (AOI32M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00197383;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000427833;
      rise_capacitance : 0.000423816;
      fall_capacitance : 0.000427833;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000393698;
      rise_capacitance : 0.000388244;
      fall_capacitance : 0.000393698;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000396241;
      rise_capacitance : 0.000395778;
      fall_capacitance : 0.000396241;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000470487;
      rise_capacitance : 0.000470487;
      fall_capacitance : 0.000463425;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000493344;
      rise_capacitance : 0.000493344;
      fall_capacitance : 0.000479862;
    }
  }
  cell (AOI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2&B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00369446;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000525469;
      rise_capacitance : 0.000525469;
      fall_capacitance : 0.00052362;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000525035;
      rise_capacitance : 0.000525035;
      fall_capacitance : 0.000524551;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000558604;
      rise_capacitance : 0.000558604;
      fall_capacitance : 0.000551226;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000524343;
      rise_capacitance : 0.00051764;
      fall_capacitance : 0.000524343;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000494395;
      rise_capacitance : 0.000486027;
      fall_capacitance : 0.000494395;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050483;
      rise_capacitance : 0.000504434;
      fall_capacitance : 0.00050483;
    }
  }
  cell (BUFM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0869051;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128797;
      rise_capacitance : 0.00128797;
      fall_capacitance : 0.00126474;
    }
  }
  cell (CKAN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0736243;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00148371;
      rise_capacitance : 0.00146122;
      fall_capacitance : 0.00148371;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00149012;
      rise_capacitance : 0.00149012;
      fall_capacitance : 0.00146242;
    }
  }
  cell (CKBUFM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.074782;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00164018;
      rise_capacitance : 0.00164018;
      fall_capacitance : 0.00163878;
    }
  }
  cell (CKINVM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.10852;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00451582;
      rise_capacitance : 0.00451582;
      fall_capacitance : 0.00446887;
    }
  }
  cell (CKMUX2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0692275;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00148715;
      rise_capacitance : 0.00148691;
      fall_capacitance : 0.00148715;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00137734;
      rise_capacitance : 0.0013759;
      fall_capacitance : 0.00137734;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013107;
      rise_capacitance : 0.0013107;
      fall_capacitance : 0.00130303;
    }
  }
  cell (CKND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0510451;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00398298;
      rise_capacitance : 0.00391584;
      fall_capacitance : 0.00398298;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00417919;
      rise_capacitance : 0.00417919;
      fall_capacitance : 0.00408737;
    }
  }
  cell (CKXOR2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00908793;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00125945;
      rise_capacitance : 0.00125945;
      fall_capacitance : 0.00124598;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000738574;
      rise_capacitance : 0.000738574;
      fall_capacitance : 0.000732641;
    }
  }
  cell (DFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130731;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00061997;
      rise_capacitance : 0.00061997;
      fall_capacitance : 0.000598939;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000483723;
      rise_capacitance : 0.000483723;
      fall_capacitance : 0.000470809;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131403;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601163;
      rise_capacitance : 0.000601163;
      fall_capacitance : 0.000579785;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000484638;
      rise_capacitance : 0.000484638;
      fall_capacitance : 0.000473681;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00130025;
      rise_capacitance : 0.00128011;
      fall_capacitance : 0.00130025;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130858;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000608728;
      rise_capacitance : 0.000608728;
      fall_capacitance : 0.000587139;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000390203;
      rise_capacitance : 0.000390203;
      fall_capacitance : 0.000382175;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133515;
      rise_capacitance : 0.00133515;
      fall_capacitance : 0.00131677;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00127163;
      rise_capacitance : 0.00125046;
      fall_capacitance : 0.00127163;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134048;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000588968;
      rise_capacitance : 0.000588968;
      fall_capacitance : 0.000567581;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050545;
      rise_capacitance : 0.00050545;
      fall_capacitance : 0.000497572;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119435;
      rise_capacitance : 0.00115532;
      fall_capacitance : 0.00119435;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132849;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100322;
      rise_capacitance : 0.00100322;
      fall_capacitance : 0.000973686;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000674725;
      rise_capacitance : 0.000674725;
      fall_capacitance : 0.000664986;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00144913;
      rise_capacitance : 0.00144913;
      fall_capacitance : 0.00142503;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133869;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000963213;
      rise_capacitance : 0.000963213;
      fall_capacitance : 0.000933663;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00063406;
      rise_capacitance : 0.00063406;
      fall_capacitance : 0.000626512;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00161252;
      rise_capacitance : 0.00161252;
      fall_capacitance : 0.00159534;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00130928;
      rise_capacitance : 0.00129522;
      fall_capacitance : 0.00130928;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128184;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000725014;
      rise_capacitance : 0.000725014;
      fall_capacitance : 0.000704032;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517696;
      rise_capacitance : 0.000516665;
      fall_capacitance : 0.000517696;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00149811;
      rise_capacitance : 0.00149811;
      fall_capacitance : 0.00146652;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000698043;
      rise_capacitance : 0.000698043;
      fall_capacitance : 0.000694116;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&((D&E)|(IQ&(!E))))";
    }
  }
  cell (DFMQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126811;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000709548;
      rise_capacitance : 0.000709548;
      fall_capacitance : 0.000688604;
    }
    pin (D1) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000529412;
      rise_capacitance : 0.000529412;
      fall_capacitance : 0.000529283;
    }
    pin (D2) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00105986;
      rise_capacitance : 0.00105986;
      fall_capacitance : 0.00104759;
    }
    pin (S) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00141709;
      rise_capacitance : 0.00141709;
      fall_capacitance : 0.00138738;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D1&S)|(D2&(!S)))";
    }
  }
  cell (DFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131638;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000614403;
      rise_capacitance : 0.000614403;
      fall_capacitance : 0.000598669;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000552674;
      rise_capacitance : 0.000552674;
      fall_capacitance : 0.00054617;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132845;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000599306;
      rise_capacitance : 0.000599306;
      fall_capacitance : 0.000579188;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556015;
      rise_capacitance : 0.000556015;
      fall_capacitance : 0.000552062;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00130299;
      rise_capacitance : 0.00128243;
      fall_capacitance : 0.00130299;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131609;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000599501;
      rise_capacitance : 0.000599501;
      fall_capacitance : 0.000578829;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556886;
      rise_capacitance : 0.000556886;
      fall_capacitance : 0.000552372;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140117;
      rise_capacitance : 0.00140117;
      fall_capacitance : 0.0013824;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00144408;
      rise_capacitance : 0.00141717;
      fall_capacitance : 0.00144408;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133622;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000594403;
      rise_capacitance : 0.000594403;
      fall_capacitance : 0.000574898;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000516103;
      rise_capacitance : 0.000516103;
      fall_capacitance : 0.000509425;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117072;
      rise_capacitance : 0.00112733;
      fall_capacitance : 0.00117072;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130293;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000652763;
      rise_capacitance : 0.000652763;
      fall_capacitance : 0.000633927;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526598;
      rise_capacitance : 0.000522077;
      fall_capacitance : 0.000526598;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000522483;
      rise_capacitance : 0.000521432;
      fall_capacitance : 0.000522483;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&D)";
    }
  }
  cell (DFQZRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122797;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000780423;
      rise_capacitance : 0.000780423;
      fall_capacitance : 0.000763468;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000464894;
      rise_capacitance : 0.000464894;
      fall_capacitance : 0.000464088;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000575083;
      rise_capacitance : 0.000574902;
      fall_capacitance : 0.000575083;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000599256;
      rise_capacitance : 0.000599256;
      fall_capacitance : 0.000584297;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&(!(SB&(!D))))";
    }
  }
  cell (DFQZSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133322;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000656943;
      rise_capacitance : 0.000656943;
      fall_capacitance : 0.000636165;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000764213;
      rise_capacitance : 0.000764213;
      fall_capacitance : 0.000744293;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000618737;
      rise_capacitance : 0.000618737;
      fall_capacitance : 0.0006037;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(!(SB&(!D)))";
    }
  }
  cell (INVM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0875417;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00370783;
      rise_capacitance : 0.00370783;
      fall_capacitance : 0.00362148;
    }
  }
  cell (LACM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130735;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129715;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000492619;
      rise_capacitance : 0.000492619;
      fall_capacitance : 0.000491848;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613464;
      rise_capacitance : 0.000613464;
      fall_capacitance : 0.000593777;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LACQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013086;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000488487;
      rise_capacitance : 0.000488487;
      fall_capacitance : 0.000487905;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613336;
      rise_capacitance : 0.000613336;
      fall_capacitance : 0.000594349;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131867;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126644;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000522129;
      rise_capacitance : 0.000522129;
      fall_capacitance : 0.00052076;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000612382;
      rise_capacitance : 0.000612382;
      fall_capacitance : 0.000593315;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131789;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000518548;
      rise_capacitance : 0.000518548;
      fall_capacitance : 0.000517465;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000612409;
      rise_capacitance : 0.000612409;
      fall_capacitance : 0.000593208;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013381;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000689257;
      rise_capacitance : 0.000685865;
      fall_capacitance : 0.000689257;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00130041;
      rise_capacitance : 0.00130041;
      fall_capacitance : 0.00127634;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000969016;
      rise_capacitance : 0.000969016;
      fall_capacitance : 0.000965167;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132659;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000431674;
      rise_capacitance : 0.000431674;
      fall_capacitance : 0.000430326;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115294;
      rise_capacitance : 0.00115294;
      fall_capacitance : 0.00112232;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000524836;
      rise_capacitance : 0.000524836;
      fall_capacitance : 0.000517497;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126341;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0138657;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000703633;
      rise_capacitance : 0.000701243;
      fall_capacitance : 0.000703633;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00130472;
      rise_capacitance : 0.00130472;
      fall_capacitance : 0.0012791;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000978823;
      rise_capacitance : 0.000978823;
      fall_capacitance : 0.000973061;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128689;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0139718;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000647125;
      rise_capacitance : 0.000644835;
      fall_capacitance : 0.000647125;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00129234;
      rise_capacitance : 0.00129234;
      fall_capacitance : 0.00126379;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000985913;
      rise_capacitance : 0.000985913;
      fall_capacitance : 0.000985771;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556654;
      rise_capacitance : 0.000552104;
      fall_capacitance : 0.000556654;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LASM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012673;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130444;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00043975;
      rise_capacitance : 0.00043975;
      fall_capacitance : 0.000438792;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011453;
      rise_capacitance : 0.0011453;
      fall_capacitance : 0.00110712;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565393;
      rise_capacitance : 0.000563344;
      fall_capacitance : 0.000565393;
    }
    latch (IQ,IQN) {
    }
  }
  cell (MUX2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00611575;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000654049;
      rise_capacitance : 0.000654049;
      fall_capacitance : 0.000641142;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000702154;
      rise_capacitance : 0.000702154;
      fall_capacitance : 0.000692681;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115547;
      rise_capacitance : 0.00115547;
      fall_capacitance : 0.00113332;
    }
  }
  cell (MUX3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&C)|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119981;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000560611;
      rise_capacitance : 0.000560611;
      fall_capacitance : 0.000545153;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000951826;
      rise_capacitance : 0.000951826;
      fall_capacitance : 0.000948397;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000958135;
      rise_capacitance : 0.000958135;
      fall_capacitance : 0.000932954;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131511;
      rise_capacitance : 0.00131511;
      fall_capacitance : 0.00127479;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00163056;
      rise_capacitance : 0.00163056;
      fall_capacitance : 0.00158394;
    }
  }
  cell (MUX4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126906;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000598873;
      rise_capacitance : 0.000598873;
      fall_capacitance : 0.000591055;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000822637;
      rise_capacitance : 0.000822637;
      fall_capacitance : 0.000811136;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0008673;
      rise_capacitance : 0.0008673;
      fall_capacitance : 0.000855968;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000976673;
      rise_capacitance : 0.000976673;
      fall_capacitance : 0.000964522;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00278199;
      rise_capacitance : 0.00278199;
      fall_capacitance : 0.0027247;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00152854;
      rise_capacitance : 0.00152854;
      fall_capacitance : 0.001484;
    }
  }
  cell (MXB2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S&B)|((!S)&A)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00932364;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000546184;
      rise_capacitance : 0.000546184;
      fall_capacitance : 0.000538617;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118242;
      rise_capacitance : 0.00118242;
      fall_capacitance : 0.00116271;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135037;
      rise_capacitance : 0.00135037;
      fall_capacitance : 0.00132223;
    }
  }
  cell (MXB3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&C)|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131202;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000679427;
      rise_capacitance : 0.000679427;
      fall_capacitance : 0.000671422;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000819309;
      rise_capacitance : 0.000819309;
      fall_capacitance : 0.000810366;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000841686;
      rise_capacitance : 0.000841686;
      fall_capacitance : 0.000834376;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00175836;
      rise_capacitance : 0.00175836;
      fall_capacitance : 0.00173296;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00166104;
      rise_capacitance : 0.00166104;
      fall_capacitance : 0.00163006;
    }
  }
  cell (MXB4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129819;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000592561;
      rise_capacitance : 0.000592561;
      fall_capacitance : 0.000587113;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000838081;
      rise_capacitance : 0.000838081;
      fall_capacitance : 0.000826278;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000984998;
      rise_capacitance : 0.000984998;
      fall_capacitance : 0.0009692;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011156;
      rise_capacitance : 0.0011156;
      fall_capacitance : 0.00109349;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0025505;
      rise_capacitance : 0.0025505;
      fall_capacitance : 0.00249469;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00143372;
      rise_capacitance : 0.00143372;
      fall_capacitance : 0.00140367;
    }
  }
  cell (ND2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0677332;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00475545;
      rise_capacitance : 0.00475545;
      fall_capacitance : 0.00471797;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00178454;
      rise_capacitance : 0.00178454;
      fall_capacitance : 0.00175248;
    }
  }
  cell (ND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0680967;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00416861;
      rise_capacitance : 0.0041157;
      fall_capacitance : 0.00416861;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00447163;
      rise_capacitance : 0.00447163;
      fall_capacitance : 0.0043431;
    }
  }
  cell (ND3B1M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00207262;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000465596;
      rise_capacitance : 0.000463054;
      fall_capacitance : 0.000465596;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000501218;
      rise_capacitance : 0.000501218;
      fall_capacitance : 0.000499733;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000589331;
      rise_capacitance : 0.000589331;
      fall_capacitance : 0.000578526;
    }
  }
  cell (ND3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0417644;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00336608;
      rise_capacitance : 0.00333935;
      fall_capacitance : 0.00336608;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00388028;
      rise_capacitance : 0.00387767;
      fall_capacitance : 0.00388028;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00399479;
      rise_capacitance : 0.00399479;
      fall_capacitance : 0.00396088;
    }
  }
  cell (ND4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00314764;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000457209;
      rise_capacitance : 0.000451588;
      fall_capacitance : 0.000457209;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000465325;
      rise_capacitance : 0.000459518;
      fall_capacitance : 0.000465325;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000499929;
      rise_capacitance : 0.000499929;
      fall_capacitance : 0.000497675;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000559583;
      rise_capacitance : 0.000559583;
      fall_capacitance : 0.000547639;
    }
  }
  cell (ND4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&(!NB)&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00301678;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000503124;
      rise_capacitance : 0.000496693;
      fall_capacitance : 0.000503124;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000600029;
      rise_capacitance : 0.000600029;
      fall_capacitance : 0.000598393;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000558318;
      rise_capacitance : 0.000558318;
      fall_capacitance : 0.000546859;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000529774;
      rise_capacitance : 0.000529774;
      fall_capacitance : 0.000520977;
    }
  }
  cell (ND4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0012336;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00039967;
      rise_capacitance : 0.000397337;
      fall_capacitance : 0.00039967;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000417372;
      rise_capacitance : 0.000413539;
      fall_capacitance : 0.000417372;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000428496;
      rise_capacitance : 0.000424575;
      fall_capacitance : 0.000428496;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000415873;
      rise_capacitance : 0.000415873;
      fall_capacitance : 0.000415142;
    }
  }
  cell (NR2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516436;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00407436;
      rise_capacitance : 0.00407436;
      fall_capacitance : 0.00394396;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00180556;
      rise_capacitance : 0.00180556;
      fall_capacitance : 0.00177209;
    }
  }
  cell (NR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516762;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00385273;
      rise_capacitance : 0.00377727;
      fall_capacitance : 0.00385273;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00368956;
      rise_capacitance : 0.00368956;
      fall_capacitance : 0.00355516;
    }
  }
  cell (NR3B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334725;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000516337;
      rise_capacitance : 0.000516337;
      fall_capacitance : 0.000506981;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517367;
      rise_capacitance : 0.000517367;
      fall_capacitance : 0.000505553;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000624186;
      rise_capacitance : 0.000624186;
      fall_capacitance : 0.000609433;
    }
  }
  cell (NR3M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00238563;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000482902;
      rise_capacitance : 0.00048262;
      fall_capacitance : 0.000482902;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000534673;
      rise_capacitance : 0.000534673;
      fall_capacitance : 0.000524645;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000504386;
      rise_capacitance : 0.000504386;
      fall_capacitance : 0.000491742;
    }
  }
  cell (NR4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00538222;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00102406;
      rise_capacitance : 0.00102406;
      fall_capacitance : 0.0010043;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000977517;
      rise_capacitance : 0.000977517;
      fall_capacitance : 0.000958555;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000811999;
      rise_capacitance : 0.000811999;
      fall_capacitance : 0.000804866;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000645651;
      rise_capacitance : 0.000645651;
      fall_capacitance : 0.000632243;
    }
  }
  cell (NR4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|(!NB)|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00536347;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000970894;
      rise_capacitance : 0.000970894;
      fall_capacitance : 0.000951648;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000816179;
      rise_capacitance : 0.000816179;
      fall_capacitance : 0.000808716;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000621915;
      rise_capacitance : 0.000621915;
      fall_capacitance : 0.00061037;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000584074;
      rise_capacitance : 0.000584074;
      fall_capacitance : 0.000573498;
    }
  }
  cell (NR4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00231307;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000527455;
      rise_capacitance : 0.00052636;
      fall_capacitance : 0.000527455;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000541599;
      rise_capacitance : 0.000541599;
      fall_capacitance : 0.0005311;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000507531;
      rise_capacitance : 0.000507531;
      fall_capacitance : 0.000497251;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478842;
      rise_capacitance : 0.000478842;
      fall_capacitance : 0.000472515;
    }
  }
  cell (OA211M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00608524;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000436835;
      rise_capacitance : 0.00043493;
      fall_capacitance : 0.000436835;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000424854;
      rise_capacitance : 0.000424854;
      fall_capacitance : 0.000422745;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000454336;
      rise_capacitance : 0.000454336;
      fall_capacitance : 0.000452434;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475713;
      rise_capacitance : 0.00047484;
      fall_capacitance : 0.000475713;
    }
  }
  cell (OA21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.11577;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00183779;
      rise_capacitance : 0.00183779;
      fall_capacitance : 0.00181953;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00190976;
      rise_capacitance : 0.00187455;
      fall_capacitance : 0.00190976;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00171144;
      rise_capacitance : 0.00171144;
      fall_capacitance : 0.00165072;
    }
  }
  cell (OA221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128606;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00046602;
      rise_capacitance : 0.00046602;
      fall_capacitance : 0.000462818;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000472436;
      rise_capacitance : 0.00047016;
      fall_capacitance : 0.000472436;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000446373;
      rise_capacitance : 0.000446373;
      fall_capacitance : 0.000444351;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000677094;
      rise_capacitance : 0.000677094;
      fall_capacitance : 0.000676991;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000570725;
      rise_capacitance : 0.000570725;
      fall_capacitance : 0.00056883;
    }
  }
  cell (OA222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&(C1|C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122239;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000479979;
      rise_capacitance : 0.000479979;
      fall_capacitance : 0.000475898;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00048437;
      rise_capacitance : 0.00048113;
      fall_capacitance : 0.00048437;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000483075;
      rise_capacitance : 0.000482513;
      fall_capacitance : 0.000483075;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000458805;
      rise_capacitance : 0.000458805;
      fall_capacitance : 0.000454038;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000447535;
      rise_capacitance : 0.000447535;
      fall_capacitance : 0.000443639;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449925;
      rise_capacitance : 0.000449925;
      fall_capacitance : 0.000438859;
    }
  }
  cell (OA22M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.107101;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00215124;
      rise_capacitance : 0.00211148;
      fall_capacitance : 0.00215124;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00202945;
      rise_capacitance : 0.00202945;
      fall_capacitance : 0.00199655;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00221353;
      rise_capacitance : 0.00221353;
      fall_capacitance : 0.002211;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00210778;
      rise_capacitance : 0.00210778;
      fall_capacitance : 0.00203379;
    }
  }
  cell (OA31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121849;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000497337;
      rise_capacitance : 0.000496453;
      fall_capacitance : 0.000497337;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000439532;
      rise_capacitance : 0.000439532;
      fall_capacitance : 0.000435251;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000492075;
      rise_capacitance : 0.000492075;
      fall_capacitance : 0.00048783;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000635418;
      rise_capacitance : 0.000635418;
      fall_capacitance : 0.000616419;
    }
  }
  cell (OA32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0127651;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000536704;
      rise_capacitance : 0.00053565;
      fall_capacitance : 0.000536704;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556605;
      rise_capacitance : 0.000556605;
      fall_capacitance : 0.000549349;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000466909;
      rise_capacitance : 0.000466909;
      fall_capacitance : 0.000461423;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000495859;
      rise_capacitance : 0.000495859;
      fall_capacitance : 0.000488297;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00051099;
      rise_capacitance : 0.00051099;
      fall_capacitance : 0.000496535;
    }
  }
  cell (OA33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2|B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131998;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000514825;
      rise_capacitance : 0.000514482;
      fall_capacitance : 0.000514825;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000540537;
      rise_capacitance : 0.000540537;
      fall_capacitance : 0.00053464;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00056483;
      rise_capacitance : 0.00056483;
      fall_capacitance : 0.000558429;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000611762;
      rise_capacitance : 0.000611762;
      fall_capacitance : 0.00060459;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000564925;
      rise_capacitance : 0.000564925;
      fall_capacitance : 0.000554257;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000569032;
      rise_capacitance : 0.000569032;
      fall_capacitance : 0.000557056;
    }
  }
  cell (OAI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0482988;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00380558;
      rise_capacitance : 0.00379323;
      fall_capacitance : 0.00380558;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0037656;
      rise_capacitance : 0.0037656;
      fall_capacitance : 0.00365359;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00401341;
      rise_capacitance : 0.00399512;
      fall_capacitance : 0.00401341;
    }
  }
  cell (OAI31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0035895;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000541186;
      rise_capacitance : 0.000541186;
      fall_capacitance : 0.000541155;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000568943;
      rise_capacitance : 0.000568943;
      fall_capacitance : 0.000558096;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000571418;
      rise_capacitance : 0.000571418;
      fall_capacitance : 0.000563678;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000577043;
      rise_capacitance : 0.000577043;
      fall_capacitance : 0.00057503;
    }
  }
  cell (OAI32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00246279;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000626204;
      rise_capacitance : 0.000623671;
      fall_capacitance : 0.000626204;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000584912;
      rise_capacitance : 0.000584912;
      fall_capacitance : 0.000577914;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553236;
      rise_capacitance : 0.000553236;
      fall_capacitance : 0.000544243;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000619653;
      rise_capacitance : 0.000619653;
      fall_capacitance : 0.000615682;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000588407;
      rise_capacitance : 0.000588407;
      fall_capacitance : 0.000568383;
    }
  }
  cell (OAI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2|B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00265102;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000568234;
      rise_capacitance : 0.000566389;
      fall_capacitance : 0.000568234;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538975;
      rise_capacitance : 0.000538975;
      fall_capacitance : 0.000532904;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00050618;
      rise_capacitance : 0.00050618;
      fall_capacitance : 0.000499921;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000485165;
      rise_capacitance : 0.000485165;
      fall_capacitance : 0.000484647;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000525906;
      rise_capacitance : 0.000525906;
      fall_capacitance : 0.000513613;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526743;
      rise_capacitance : 0.000526743;
      fall_capacitance : 0.000514986;
    }
  }
  cell (OR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112352;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00203303;
      rise_capacitance : 0.00199935;
      fall_capacitance : 0.00203303;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00195111;
      rise_capacitance : 0.00195111;
      fall_capacitance : 0.00188611;
    }
  }
  cell (OR3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112302;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.001725;
      rise_capacitance : 0.00170638;
      fall_capacitance : 0.001725;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00139155;
      rise_capacitance : 0.00139155;
      fall_capacitance : 0.00136366;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00151348;
      rise_capacitance : 0.00151348;
      fall_capacitance : 0.00147588;
    }
  }
  cell (OR4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.103297;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00182763;
      rise_capacitance : 0.00181663;
      fall_capacitance : 0.00182763;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00144281;
      rise_capacitance : 0.00144281;
      fall_capacitance : 0.0014099;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140799;
      rise_capacitance : 0.00140799;
      fall_capacitance : 0.00137552;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00154617;
      rise_capacitance : 0.00154617;
      fall_capacitance : 0.00152647;
    }
  }
  cell (OR6M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D|E|F)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00337482;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "E";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "F";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "E";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "F";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000519811;
      rise_capacitance : 0.000519811;
      fall_capacitance : 0.000504646;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000510319;
      rise_capacitance : 0.000510319;
      fall_capacitance : 0.000502068;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000448304;
      rise_capacitance : 0.000448304;
      fall_capacitance : 0.000446217;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000448961;
      rise_capacitance : 0.000448961;
      fall_capacitance : 0.000438116;
    }
    pin (E) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000447403;
      rise_capacitance : 0.000447403;
      fall_capacitance : 0.000438994;
    }
    pin (F) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000504061;
      rise_capacitance : 0.000504061;
      fall_capacitance : 0.000495727;
    }
  }
  cell (SDFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012542;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000767734;
      rise_capacitance : 0.000767734;
      fall_capacitance : 0.000744184;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000954461;
      rise_capacitance : 0.000954461;
      fall_capacitance : 0.000943012;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000399868;
      rise_capacitance : 0.000399868;
      fall_capacitance : 0.000398289;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115323;
      rise_capacitance : 0.00115323;
      fall_capacitance : 0.00112966;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126221;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000778201;
      rise_capacitance : 0.000778201;
      fall_capacitance : 0.000755837;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000929011;
      rise_capacitance : 0.000929011;
      fall_capacitance : 0.000920064;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00121196;
      rise_capacitance : 0.00120781;
      fall_capacitance : 0.00121196;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395392;
      rise_capacitance : 0.000395392;
      fall_capacitance : 0.000393947;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011094;
      rise_capacitance : 0.0011094;
      fall_capacitance : 0.00108759;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128508;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000780642;
      rise_capacitance : 0.000780642;
      fall_capacitance : 0.000756651;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000940108;
      rise_capacitance : 0.000940108;
      fall_capacitance : 0.000929556;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00136008;
      rise_capacitance : 0.00133588;
      fall_capacitance : 0.00136008;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000395124;
      rise_capacitance : 0.000395124;
      fall_capacitance : 0.000393686;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110964;
      rise_capacitance : 0.00110964;
      fall_capacitance : 0.00108743;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132161;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000665559;
      rise_capacitance : 0.000665559;
      fall_capacitance : 0.000646949;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430719;
      rise_capacitance : 0.000430719;
      fall_capacitance : 0.000423524;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00109847;
      rise_capacitance : 0.00109847;
      fall_capacitance : 0.00106874;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000618898;
      rise_capacitance : 0.000618898;
      fall_capacitance : 0.000605634;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00126293;
      rise_capacitance : 0.00126293;
      fall_capacitance : 0.0012381;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126722;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000755591;
      rise_capacitance : 0.000755591;
      fall_capacitance : 0.000733662;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00067158;
      rise_capacitance : 0.00067158;
      fall_capacitance : 0.000666829;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00154806;
      rise_capacitance : 0.00154806;
      fall_capacitance : 0.00151606;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00127519;
      rise_capacitance : 0.00127519;
      fall_capacitance : 0.00127493;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000367352;
      rise_capacitance : 0.000367352;
      fall_capacitance : 0.000366498;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00114912;
      rise_capacitance : 0.00114912;
      fall_capacitance : 0.00112013;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129537;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000729587;
      rise_capacitance : 0.000729587;
      fall_capacitance : 0.000710266;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00095321;
      rise_capacitance : 0.00095321;
      fall_capacitance : 0.000940787;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000390517;
      rise_capacitance : 0.000390517;
      fall_capacitance : 0.000388884;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00112114;
      rise_capacitance : 0.00112114;
      fall_capacitance : 0.00109825;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013141;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000775872;
      rise_capacitance : 0.000775872;
      fall_capacitance : 0.000753691;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000914291;
      rise_capacitance : 0.000914291;
      fall_capacitance : 0.000901851;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00123686;
      rise_capacitance : 0.00123167;
      fall_capacitance : 0.00123686;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000391445;
      rise_capacitance : 0.000391445;
      fall_capacitance : 0.000389772;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011085;
      rise_capacitance : 0.0011085;
      fall_capacitance : 0.00108571;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131992;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000773999;
      rise_capacitance : 0.000773999;
      fall_capacitance : 0.000751464;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00089916;
      rise_capacitance : 0.00089916;
      fall_capacitance : 0.000886184;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131793;
      rise_capacitance : 0.00131793;
      fall_capacitance : 0.00131284;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167244;
      rise_capacitance : 0.00164779;
      fall_capacitance : 0.00167244;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000393261;
      rise_capacitance : 0.000393261;
      fall_capacitance : 0.000391587;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00109674;
      rise_capacitance : 0.00109674;
      fall_capacitance : 0.00107074;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clear_preset_var1 : L;
        clear_preset_var2 : H;
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128179;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000774538;
      rise_capacitance : 0.000774538;
      fall_capacitance : 0.000751175;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000899304;
      rise_capacitance : 0.000899304;
      fall_capacitance : 0.000886049;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00136402;
      rise_capacitance : 0.00133971;
      fall_capacitance : 0.00136402;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000393403;
      rise_capacitance : 0.000393403;
      fall_capacitance : 0.000391744;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110644;
      rise_capacitance : 0.00110644;
      fall_capacitance : 0.00108353;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (XNR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0114799;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00124154;
      rise_capacitance : 0.00124154;
      fall_capacitance : 0.00121953;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000699434;
      rise_capacitance : 0.000699434;
      fall_capacitance : 0.000684841;
    }
  }
  cell (XNR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119205;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00074524;
      rise_capacitance : 0.00074524;
      fall_capacitance : 0.000731294;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00129157;
      rise_capacitance : 0.00129157;
      fall_capacitance : 0.00126091;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00129968;
      rise_capacitance : 0.00129968;
      fall_capacitance : 0.0012696;
    }
  }
  cell (XNR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C^D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134135;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00127759;
      rise_capacitance : 0.00127759;
      fall_capacitance : 0.00124907;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000758865;
      rise_capacitance : 0.000758865;
      fall_capacitance : 0.00074449;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000737737;
      rise_capacitance : 0.000737737;
      fall_capacitance : 0.00072236;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133694;
      rise_capacitance : 0.00133694;
      fall_capacitance : 0.00131116;
    }
  }
  cell (XOR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121806;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00132464;
      rise_capacitance : 0.00132464;
      fall_capacitance : 0.00129623;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000721341;
      rise_capacitance : 0.000721341;
      fall_capacitance : 0.000705922;
    }
  }
  cell (XOR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130745;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000851253;
      rise_capacitance : 0.000851253;
      fall_capacitance : 0.000832209;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00137081;
      rise_capacitance : 0.00137081;
      fall_capacitance : 0.00133323;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113446;
      rise_capacitance : 0.00113446;
      fall_capacitance : 0.00111466;
    }
  }
  cell (XOR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C^D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133628;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00127887;
      rise_capacitance : 0.00127887;
      fall_capacitance : 0.0012498;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00075481;
      rise_capacitance : 0.00075481;
      fall_capacitance : 0.000740463;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000693369;
      rise_capacitance : 0.000693369;
      fall_capacitance : 0.000675933;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133672;
      rise_capacitance : 0.00133672;
      fall_capacitance : 0.00131;
    }
  }
}
