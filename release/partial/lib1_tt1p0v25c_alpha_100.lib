library (lib1_tt1p0v25c_alpha_100) {
  revision : "1.0";
  delay_model : table_lookup;
  capacitive_load_unit (1,pf);
  current_unit : "1mA";
  leakage_power_unit : "1pW";
  pulling_resistance_unit : "1kohm";
  time_unit : "1ns";
  voltage_unit : "1V";
  voltage_map (VDD, 1);
  voltage_map (VSS, 0);
  voltage_map (GND, 0);
  default_cell_leakage_power : 0;
  default_fanout_load : 1;
  default_max_transition : 0.75;
  default_output_pin_cap : 0;
  in_place_swap_mode : match_footprint;
  input_threshold_pct_fall : 50;
  input_threshold_pct_rise : 50;
  nom_process : 1;
  nom_temperature : 25;
  nom_voltage : 1;
  output_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  slew_derate_from_library : 0.5;
  slew_lower_threshold_pct_fall : 30;
  slew_lower_threshold_pct_rise : 30;
  slew_upper_threshold_pct_fall : 70;
  slew_upper_threshold_pct_rise : 70;
  operating_conditions (tt1p0v25c) {
    process : 1;
    temperature : 25;
    voltage : 1;
  }
  default_operating_conditions : tt1p0v25c;
  lu_table_template (delay_template_generic_7x7) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  power_lut_template (power_template_generic_7x7) {
    variable_1 : input_transition_time;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
    index_2 ("0.001, 0.00250018, 0.00776614, 0.0178223, 0.0334892, 0.0554717, 0.0843977");
  }
  cell (AN2AM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112104;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299857, 0.010014, 0.0234109, 0.0442827, 0.0735682, 0.112104");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00106818;
      rise_capacitance : 0.00106083;
      fall_capacitance : 0.00106818;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135735;
      rise_capacitance : 0.00135735;
      fall_capacitance : 0.00134537;
    }
  }
  cell (AN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.115718;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306358, 0.0103072, 0.0241399, 0.0456906, 0.0759287, 0.115718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00189046;
      rise_capacitance : 0.00188001;
      fall_capacitance : 0.00189046;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00210512;
      rise_capacitance : 0.00210512;
      fall_capacitance : 0.00206216;
    }
  }
  cell (AN3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.114327;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00303856, 0.0101943, 0.0238593, 0.0451487, 0.0750202, 0.114327");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00179546;
      rise_capacitance : 0.00178402;
      fall_capacitance : 0.00179546;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00192643;
      rise_capacitance : 0.00190901;
      fall_capacitance : 0.00192643;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00201622;
      rise_capacitance : 0.00201622;
      fall_capacitance : 0.0019839;
    }
  }
  cell (AN4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B&C&D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.111807;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00299323, 0.00998989, 0.023351, 0.044167, 0.0733742, 0.111807");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00167189;
      rise_capacitance : 0.00166621;
      fall_capacitance : 0.00167189;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00180426;
      rise_capacitance : 0.00178096;
      fall_capacitance : 0.00180426;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0018997;
      rise_capacitance : 0.0018722;
      fall_capacitance : 0.0018997;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00195348;
      rise_capacitance : 0.00195348;
      fall_capacitance : 0.00193371;
    }
  }
  cell (AO211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012693;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121034, 0.00194867, 0.00335861, 0.00555523, 0.00863735, 0.012693");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000505131;
      rise_capacitance : 0.000505131;
      fall_capacitance : 0.000501539;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000541767;
      rise_capacitance : 0.000541767;
      fall_capacitance : 0.000536751;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000543388;
      rise_capacitance : 0.000543388;
      fall_capacitance : 0.000537447;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000544157;
      rise_capacitance : 0.000544157;
      fall_capacitance : 0.000540142;
    }
  }
  cell (AO21M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00595682;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108916, 0.00140215, 0.00199985, 0.00293102, 0.00423758, 0.00595682");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000462102;
      rise_capacitance : 0.000462102;
      fall_capacitance : 0.000459486;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000473414;
      rise_capacitance : 0.000473414;
      fall_capacitance : 0.000468335;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00057759;
      rise_capacitance : 0.00057759;
      fall_capacitance : 0.000568224;
    }
  }
  cell (AO221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132756;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122082, 0.00199593, 0.00347613, 0.0057822, 0.00901788, 0.0132756");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000482747;
      rise_capacitance : 0.000482747;
      fall_capacitance : 0.000479388;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000494297;
      rise_capacitance : 0.000494297;
      fall_capacitance : 0.000488954;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000488672;
      rise_capacitance : 0.000488672;
      fall_capacitance : 0.000485252;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000503101;
      rise_capacitance : 0.000503101;
      fall_capacitance : 0.000498876;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00059593;
      rise_capacitance : 0.00059593;
      fall_capacitance : 0.000590953;
    }
  }
  cell (AO222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2)|(C1&C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126448;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&!A2&!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120947, 0.00194475, 0.00334889, 0.00553646, 0.00860587, 0.0126448");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000498385;
      rise_capacitance : 0.000498385;
      fall_capacitance : 0.000491407;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000526402;
      rise_capacitance : 0.000526402;
      fall_capacitance : 0.000517918;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000478629;
      rise_capacitance : 0.000478629;
      fall_capacitance : 0.000474775;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517538;
      rise_capacitance : 0.000517538;
      fall_capacitance : 0.000513286;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000490791;
      rise_capacitance : 0.000486159;
      fall_capacitance : 0.000490791;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000535071;
      rise_capacitance : 0.000535071;
      fall_capacitance : 0.000534494;
    }
  }
  cell (AO22M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00581923;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00108669, 0.00139099, 0.00197209, 0.00287742, 0.00414771, 0.00581923");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000550565;
      rise_capacitance : 0.000550565;
      fall_capacitance : 0.000544956;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000568071;
      rise_capacitance : 0.000568071;
      fall_capacitance : 0.000557802;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000510896;
      rise_capacitance : 0.000505136;
      fall_capacitance : 0.000510896;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000488068;
      rise_capacitance : 0.000485523;
      fall_capacitance : 0.000488068;
    }
  }
  cell (AO31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128935;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121394, 0.00196493, 0.00339905, 0.00563334, 0.00876831, 0.0128935");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000572311;
      rise_capacitance : 0.000569274;
      fall_capacitance : 0.000572311;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000528764;
      rise_capacitance : 0.000523956;
      fall_capacitance : 0.000528764;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000628163;
      rise_capacitance : 0.000627595;
      fall_capacitance : 0.000628163;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000651108;
      rise_capacitance : 0.000651108;
      fall_capacitance : 0.000631889;
    }
  }
  cell (AO32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128035;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121232, 0.00195763, 0.0033809, 0.00559828, 0.00870953, 0.0128035");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000572879;
      rise_capacitance : 0.000569249;
      fall_capacitance : 0.000572879;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000536807;
      rise_capacitance : 0.000532259;
      fall_capacitance : 0.000536807;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000617043;
      rise_capacitance : 0.000616974;
      fall_capacitance : 0.000617043;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000608473;
      rise_capacitance : 0.000608473;
      fall_capacitance : 0.000603217;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000602616;
      rise_capacitance : 0.000602616;
      fall_capacitance : 0.000594517;
    }
  }
  cell (AO33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1&A2&A3)|(B1&B2&B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0124608;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120616, 0.00192983, 0.00331177, 0.00546478, 0.00848569, 0.0124608");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000607201;
      rise_capacitance : 0.000607201;
      fall_capacitance : 0.000605977;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0005686;
      rise_capacitance : 0.00056839;
      fall_capacitance : 0.0005686;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538707;
      rise_capacitance : 0.000538707;
      fall_capacitance : 0.000534485;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000592358;
      rise_capacitance : 0.00058784;
      fall_capacitance : 0.000592358;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000545921;
      rise_capacitance : 0.000540885;
      fall_capacitance : 0.000545921;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000585649;
      rise_capacitance : 0.000585439;
      fall_capacitance : 0.000585649;
    }
  }
  cell (AOI211M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334603;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010422, 0.00119034, 0.00147322, 0.00191394, 0.00253232, 0.00334603");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000590946;
      rise_capacitance : 0.00058791;
      fall_capacitance : 0.000590946;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000591433;
      rise_capacitance : 0.000589439;
      fall_capacitance : 0.000591433;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000544913;
      rise_capacitance : 0.000544913;
      fall_capacitance : 0.000537054;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000537486;
      rise_capacitance : 0.000537486;
      fall_capacitance : 0.000522547;
    }
  }
  cell (AOI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0511404;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190194, 0.00506794, 0.0111139, 0.0205332, 0.0337495, 0.0511404");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00435642;
      rise_capacitance : 0.00430261;
      fall_capacitance : 0.00435642;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00461008;
      rise_capacitance : 0.00458089;
      fall_capacitance : 0.00461008;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.004198;
      rise_capacitance : 0.004198;
      fall_capacitance : 0.00404271;
    }
  }
  cell (AOI31M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00213524;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102042, 0.0010921, 0.00122899, 0.00144225, 0.00174149, 0.00213524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475812;
      rise_capacitance : 0.000472944;
      fall_capacitance : 0.000475812;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000451362;
      rise_capacitance : 0.000447075;
      fall_capacitance : 0.000451362;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449453;
      rise_capacitance : 0.000448978;
      fall_capacitance : 0.000449453;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0006;
      rise_capacitance : 0.0006;
      fall_capacitance : 0.000577581;
    }
  }
  cell (AOI32M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00197383;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101752, 0.00107901, 0.00119643, 0.00137937, 0.00163606, 0.00197383");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000443036;
      rise_capacitance : 0.000439286;
      fall_capacitance : 0.000443036;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00041067;
      rise_capacitance : 0.000405306;
      fall_capacitance : 0.00041067;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000415376;
      rise_capacitance : 0.000415135;
      fall_capacitance : 0.000415376;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489438;
      rise_capacitance : 0.000489438;
      fall_capacitance : 0.000483874;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517373;
      rise_capacitance : 0.000517373;
      fall_capacitance : 0.000505997;
    }
  }
  cell (AOI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1&A2&A3)|(B1&B2&B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00369446;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104847, 0.0012186, 0.0015435, 0.00204968, 0.0027599, 0.00369446");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000549617;
      rise_capacitance : 0.000549617;
      fall_capacitance : 0.000547499;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000552853;
      rise_capacitance : 0.000552853;
      fall_capacitance : 0.000552463;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000592326;
      rise_capacitance : 0.000592326;
      fall_capacitance : 0.000585044;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000549553;
      rise_capacitance : 0.000543386;
      fall_capacitance : 0.000549553;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000523547;
      rise_capacitance : 0.000515394;
      fall_capacitance : 0.000523547;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538062;
      rise_capacitance : 0.000538062;
      fall_capacitance : 0.000538019;
    }
  }
  cell (BUFM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0869051;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00254528, 0.00796957, 0.018328, 0.034466, 0.0571094, 0.0869051");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013761;
      rise_capacitance : 0.0013761;
      fall_capacitance : 0.00135517;
    }
  }
  cell (CKAN2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0736243;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00230639, 0.00689209, 0.0156491, 0.0292922, 0.048435, 0.0736243");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00156544;
      rise_capacitance : 0.00154896;
      fall_capacitance : 0.00156544;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00159119;
      rise_capacitance : 0.00159119;
      fall_capacitance : 0.00156293;
    }
  }
  cell (CKBUFM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "A";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.074782;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00232721, 0.00698601, 0.0158827, 0.0297432, 0.0491911, 0.074782");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00174527;
      rise_capacitance : 0.00174527;
      fall_capacitance : 0.00174186;
    }
  }
  cell (CKINVM16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.10852;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0029341, 0.00972321, 0.022688, 0.0428865, 0.0712273, 0.10852");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00486301;
      rise_capacitance : 0.00486301;
      fall_capacitance : 0.00482397;
    }
  }
  cell (CKMUX2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0692275;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00222729, 0.00653537, 0.0147623, 0.0275793, 0.0455632, 0.0692275");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157957;
      rise_capacitance : 0.00157957;
      fall_capacitance : 0.00157945;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146094;
      rise_capacitance : 0.00145949;
      fall_capacitance : 0.00146094;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00136516;
      rise_capacitance : 0.00136516;
      fall_capacitance : 0.00136028;
    }
  }
  cell (CKND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0510451;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00190022, 0.00506021, 0.0110947, 0.020496, 0.0336872, 0.0510451");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00423392;
      rise_capacitance : 0.00417688;
      fall_capacitance : 0.00423392;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00447881;
      rise_capacitance : 0.00447881;
      fall_capacitance : 0.00439004;
    }
  }
  cell (CKXOR2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00908793;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114549, 0.00165618, 0.00263143, 0.00415081, 0.00628268, 0.00908793");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131127;
      rise_capacitance : 0.00131127;
      fall_capacitance : 0.00130148;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00076944;
      rise_capacitance : 0.00076944;
      fall_capacitance : 0.000763767;
    }
  }
  cell (DFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130731;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121717, 0.0019795, 0.00343528, 0.00570331, 0.00888562, 0.0130731");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00065432;
      rise_capacitance : 0.00065432;
      fall_capacitance : 0.000638346;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000508733;
      rise_capacitance : 0.000508733;
      fall_capacitance : 0.000496796;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131403;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121838, 0.00198496, 0.00344883, 0.00572949, 0.00892951, 0.0131403");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000636031;
      rise_capacitance : 0.000636031;
      fall_capacitance : 0.000619801;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000509985;
      rise_capacitance : 0.000509985;
      fall_capacitance : 0.000501092;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134665;
      rise_capacitance : 0.00133159;
      fall_capacitance : 0.00134665;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130858;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012174, 0.00198053, 0.00343784, 0.00570826, 0.00889391, 0.0130858");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000644402;
      rise_capacitance : 0.000644402;
      fall_capacitance : 0.000628099;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000406333;
      rise_capacitance : 0.000406333;
      fall_capacitance : 0.000399591;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138576;
      rise_capacitance : 0.00138576;
      fall_capacitance : 0.00135267;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131884;
      rise_capacitance : 0.00130123;
      fall_capacitance : 0.00131884;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134048;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122314, 0.00200641, 0.00350219, 0.00583253, 0.00910227, 0.0134048");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000622865;
      rise_capacitance : 0.000622865;
      fall_capacitance : 0.000607142;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000533597;
      rise_capacitance : 0.000533597;
      fall_capacitance : 0.000527109;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00123823;
      rise_capacitance : 0.00118956;
      fall_capacitance : 0.00123823;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "D";
    }
  }
  cell (DFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132849;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199669, 0.003478, 0.00578582, 0.00902395, 0.0132849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.001048;
      rise_capacitance : 0.001048;
      fall_capacitance : 0.00102654;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000708586;
      rise_capacitance : 0.000708586;
      fall_capacitance : 0.000699323;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00150765;
      rise_capacitance : 0.00150765;
      fall_capacitance : 0.00148752;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133869;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122282, 0.00200496, 0.00349858, 0.00582556, 0.00909058, 0.0133869");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100768;
      rise_capacitance : 0.00100768;
      fall_capacitance : 0.000984487;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000661497;
      rise_capacitance : 0.000661497;
      fall_capacitance : 0.000654615;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00166979;
      rise_capacitance : 0.00166979;
      fall_capacitance : 0.0016631;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135625;
      rise_capacitance : 0.00134401;
      fall_capacitance : 0.00135625;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D&E)|(IQ&(!E)))";
    }
  }
  cell (DFEQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128184;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121259, 0.00195884, 0.0033839, 0.00560409, 0.00871926, 0.0128184");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00076042;
      rise_capacitance : 0.00076042;
      fall_capacitance : 0.000745667;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00053533;
      rise_capacitance : 0.000535124;
      fall_capacitance : 0.00053533;
    }
    pin (E) {
      direction : "input";
      nextstate_type : "load";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00157782;
      rise_capacitance : 0.00157782;
      fall_capacitance : 0.00154993;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000736339;
      rise_capacitance : 0.000736339;
      fall_capacitance : 0.000732476;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&((D&E)|(IQ&(!E))))";
    }
  }
  cell (DFMQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126811;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121012, 0.0019477, 0.00335621, 0.0055506, 0.00862958, 0.0126811");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000744609;
      rise_capacitance : 0.000744609;
      fall_capacitance : 0.00072996;
    }
    pin (D1) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556405;
      rise_capacitance : 0.000556405;
      fall_capacitance : 0.000556332;
    }
    pin (D2) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00110565;
      rise_capacitance : 0.00110565;
      fall_capacitance : 0.00109394;
    }
    pin (S) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0014644;
      rise_capacitance : 0.0014644;
      fall_capacitance : 0.00144165;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((D1&S)|(D2&(!S)))";
    }
  }
  cell (DFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131638;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121881, 0.00198686, 0.00345358, 0.00573864, 0.00894486, 0.0131638");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00064984;
      rise_capacitance : 0.00064984;
      fall_capacitance : 0.000639572;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000581471;
      rise_capacitance : 0.000581471;
      fall_capacitance : 0.000575567;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132845;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122098, 0.00199665, 0.00347792, 0.00578566, 0.00902369, 0.0132845");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000635072;
      rise_capacitance : 0.000635072;
      fall_capacitance : 0.000619726;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000584265;
      rise_capacitance : 0.000584265;
      fall_capacitance : 0.000581264;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.001349;
      rise_capacitance : 0.00133397;
      fall_capacitance : 0.001349;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131609;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121875, 0.00198663, 0.00345299, 0.00573751, 0.00894296, 0.0131609");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000634999;
      rise_capacitance : 0.000634999;
      fall_capacitance : 0.000619329;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000586272;
      rise_capacitance : 0.000586272;
      fall_capacitance : 0.000582088;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00145825;
      rise_capacitance : 0.00145825;
      fall_capacitance : 0.00142564;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00150104;
      rise_capacitance : 0.00147343;
      fall_capacitance : 0.00150104;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133622;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122237, 0.00200296, 0.00349359, 0.00581593, 0.00907444, 0.0133622");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000627927;
      rise_capacitance : 0.000627927;
      fall_capacitance : 0.000614693;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000544695;
      rise_capacitance : 0.000544695;
      fall_capacitance : 0.00053892;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119569;
      rise_capacitance : 0.00115742;
      fall_capacitance : 0.00119569;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "D";
    }
  }
  cell (DFQZRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130293;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121639, 0.00197595, 0.00342645, 0.00568625, 0.00885701, 0.0130293");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000688792;
      rise_capacitance : 0.000688792;
      fall_capacitance : 0.000675897;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000555201;
      rise_capacitance : 0.000551265;
      fall_capacitance : 0.000555201;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553293;
      rise_capacitance : 0.000552391;
      fall_capacitance : 0.000553293;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&D)";
    }
  }
  cell (DFQZRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122797;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012029, 0.00191513, 0.00327524, 0.00539422, 0.0083674, 0.0122797");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000816974;
      rise_capacitance : 0.000816974;
      fall_capacitance : 0.000810512;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000481205;
      rise_capacitance : 0.000481205;
      fall_capacitance : 0.000480182;
    }
    pin (RB) {
      direction : "input";
      nextstate_type : "clear";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000601673;
      rise_capacitance : 0.000601413;
      fall_capacitance : 0.000601673;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000629011;
      rise_capacitance : 0.000629011;
      fall_capacitance : 0.000617528;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(RB&(!(SB&(!D))))";
    }
  }
  cell (DFQZSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133322;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122183, 0.00200052, 0.00348754, 0.00580425, 0.00905485, 0.0133322");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000692755;
      rise_capacitance : 0.000692755;
      fall_capacitance : 0.000677673;
    }
    pin (D) {
      direction : "input";
      nextstate_type : "data";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000791456;
      rise_capacitance : 0.000791456;
      fall_capacitance : 0.000773903;
    }
    pin (SB) {
      direction : "input";
      nextstate_type : "preset";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000649983;
      rise_capacitance : 0.000649983;
      fall_capacitance : 0.000638514;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "(!(SB&(!D)))";
    }
  }
  cell (INVM12) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!A)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0875417;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00255674, 0.00802122, 0.0184564, 0.034714, 0.0575252, 0.0875417");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00398304;
      rise_capacitance : 0.00398304;
      fall_capacitance : 0.0039158;
    }
  }
  cell (LACM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130735;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121718, 0.00197954, 0.00343536, 0.00570346, 0.00888588, 0.0130735");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129715;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121535, 0.00197126, 0.00341479, 0.00566373, 0.00881926, 0.0129715");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000513494;
      rise_capacitance : 0.000513494;
      fall_capacitance : 0.000511792;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000644785;
      rise_capacitance : 0.000644785;
      fall_capacitance : 0.000630672;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LACQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013086;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "GB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "GB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121741, 0.00198055, 0.00343788, 0.00570833, 0.00889404, 0.013086");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000508929;
      rise_capacitance : 0.000508929;
      fall_capacitance : 0.000507428;
    }
    pin (GB) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000644613;
      rise_capacitance : 0.000644613;
      fall_capacitance : 0.000630608;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131867;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121922, 0.00198872, 0.00345819, 0.00574756, 0.00895981, 0.0131867");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126644;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120982, 0.00194634, 0.00335284, 0.00554409, 0.00861867, 0.0126644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000547596;
      rise_capacitance : 0.000547596;
      fall_capacitance : 0.000546935;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000643497;
      rise_capacitance : 0.000643497;
      fall_capacitance : 0.000630495;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131789;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121908, 0.00198809, 0.00345662, 0.00574453, 0.00895472, 0.0131789");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000543924;
      rise_capacitance : 0.000543924;
      fall_capacitance : 0.000542898;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000643738;
      rise_capacitance : 0.000643738;
      fall_capacitance : 0.000630541;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013381;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122271, 0.00200448, 0.00349739, 0.00582326, 0.00908672, 0.013381");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000712338;
      rise_capacitance : 0.000708231;
      fall_capacitance : 0.000712338;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133829;
      rise_capacitance : 0.00133829;
      fall_capacitance : 0.00131795;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000998643;
      rise_capacitance : 0.000998643;
      fall_capacitance : 0.00099493;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LAQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132659;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122064, 0.00199515, 0.00347417, 0.00577842, 0.00901154, 0.0132659");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449494;
      rise_capacitance : 0.000449494;
      fall_capacitance : 0.000448438;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119027;
      rise_capacitance : 0.00119027;
      fall_capacitance : 0.00115935;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000547575;
      rise_capacitance : 0.000547575;
      fall_capacitance : 0.000536461;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126341;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120928, 0.00194389, 0.00334673, 0.00553229, 0.00859888, 0.0126341");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0138657;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123143, 0.00204381, 0.00359516, 0.00601208, 0.00940331, 0.0138657");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000729799;
      rise_capacitance : 0.000726822;
      fall_capacitance : 0.000729799;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134304;
      rise_capacitance : 0.00134304;
      fall_capacitance : 0.00132191;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100907;
      rise_capacitance : 0.00100907;
      fall_capacitance : 0.00100406;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LARSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128689;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012135, 0.00196294, 0.00339409, 0.00562376, 0.00875224, 0.0128689");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0139718;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00123334, 0.00205242, 0.00361656, 0.00605341, 0.00947261, 0.0139718");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000668359;
      rise_capacitance : 0.000665203;
      fall_capacitance : 0.000668359;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00132748;
      rise_capacitance : 0.00132748;
      fall_capacitance : 0.00130299;
    }
    pin (RB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00101989;
      rise_capacitance : 0.00101989;
      fall_capacitance : 0.0010183;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000582106;
      rise_capacitance : 0.000579233;
      fall_capacitance : 0.000582106;
    }
    latch (IQ,IQN) {
    }
  }
  cell (LASM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : "output";
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012673;
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120998, 0.00194704, 0.00335458, 0.00554744, 0.00862429, 0.012673");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (QB) {
      direction : "output";
      function : "IQN";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130444;
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "G";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "G";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121666, 0.00197717, 0.00342949, 0.00569213, 0.00886687, 0.0130444");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000458022;
      rise_capacitance : 0.000458022;
      fall_capacitance : 0.000456828;
    }
    pin (G) {
      clock : true;
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00118195;
      rise_capacitance : 0.00118195;
      fall_capacitance : 0.0011426;
    }
    pin (SB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00059566;
      rise_capacitance : 0.00059566;
      fall_capacitance : 0.000591767;
    }
    latch (IQ,IQN) {
    }
  }
  cell (MUX2M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S&B)|((!S)&A))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00611575;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109202, 0.00141505, 0.0020319, 0.00299294, 0.00434138, 0.00611575");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000684197;
      rise_capacitance : 0.000684197;
      fall_capacitance : 0.000672734;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000727635;
      rise_capacitance : 0.000727635;
      fall_capacitance : 0.00071796;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119121;
      rise_capacitance : 0.00119121;
      fall_capacitance : 0.00117357;
    }
  }
  cell (MUX3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&C)|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119981;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119784, 0.00189229, 0.00321844, 0.00528452, 0.00818347, 0.0119981");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00058536;
      rise_capacitance : 0.00058536;
      fall_capacitance : 0.000573585;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000998528;
      rise_capacitance : 0.000998528;
      fall_capacitance : 0.00099621;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100392;
      rise_capacitance : 0.00100392;
      fall_capacitance : 0.000983146;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00136833;
      rise_capacitance : 0.00136833;
      fall_capacitance : 0.00133913;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00168434;
      rise_capacitance : 0.00168434;
      fall_capacitance : 0.00165205;
    }
  }
  cell (MUX4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126906;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121029, 0.00194847, 0.00335813, 0.0055543, 0.00863578, 0.0126906");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00062903;
      rise_capacitance : 0.00062903;
      fall_capacitance : 0.000621582;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000856818;
      rise_capacitance : 0.000856818;
      fall_capacitance : 0.000846731;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000899675;
      rise_capacitance : 0.000899675;
      fall_capacitance : 0.00089112;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00101463;
      rise_capacitance : 0.00101463;
      fall_capacitance : 0.00100473;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00286846;
      rise_capacitance : 0.00286846;
      fall_capacitance : 0.00282213;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00158197;
      rise_capacitance : 0.00158197;
      fall_capacitance : 0.00155022;
    }
  }
  cell (MXB2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S&B)|((!S)&A)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00932364;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00114973, 0.00167531, 0.00267897, 0.00424263, 0.00643663, 0.00932364");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00057634;
      rise_capacitance : 0.00057634;
      fall_capacitance : 0.000569796;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00124151;
      rise_capacitance : 0.00124151;
      fall_capacitance : 0.00122347;
    }
    pin (S) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140114;
      rise_capacitance : 0.00140114;
      fall_capacitance : 0.00138007;
    }
  }
  cell (MXB3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&C)|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131202;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121802, 0.00198332, 0.00344478, 0.00572166, 0.00891638, 0.0131202");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000714217;
      rise_capacitance : 0.000714217;
      fall_capacitance : 0.000706407;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000861198;
      rise_capacitance : 0.000861198;
      fall_capacitance : 0.000853141;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000884554;
      rise_capacitance : 0.000884554;
      fall_capacitance : 0.00087649;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00180345;
      rise_capacitance : 0.00180345;
      fall_capacitance : 0.00178445;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0017173;
      rise_capacitance : 0.0017173;
      fall_capacitance : 0.00169041;
    }
  }
  cell (MXB4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((S1&((S0&D)|((!S0)&C)))|((!S1)&((S0&B)|((!S0)&A)))))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129819;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S1 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S1 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&!S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S0";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S1 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S1";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b0 && S0 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0 && D == 1'b0 && S0 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C&!D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b1 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1 && D == 1'b0 && S0 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C&!D&!S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "S1";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0 && D == 1'b1 && S0 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C&D&S0";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "A&!B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&B&!C&!D&!S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&C&!D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S0";
        when : "!A&!B&!C&D&S1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "A&!B&!C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&B&!C&!D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&C&!D&!S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "S1";
        when : "!A&!B&!C&D&S0";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121553, 0.0019721, 0.00341688, 0.00566778, 0.00882605, 0.0129819");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000623784;
      rise_capacitance : 0.000623784;
      fall_capacitance : 0.000618308;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000885698;
      rise_capacitance : 0.000885698;
      fall_capacitance : 0.000874996;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00102961;
      rise_capacitance : 0.00102961;
      fall_capacitance : 0.00101572;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00117905;
      rise_capacitance : 0.00117905;
      fall_capacitance : 0.00115658;
    }
    pin (S0) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00262896;
      rise_capacitance : 0.00262896;
      fall_capacitance : 0.00258543;
    }
    pin (S1) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00148416;
      rise_capacitance : 0.00148416;
      fall_capacitance : 0.00146279;
    }
  }
  cell (ND2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0677332;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220041, 0.00641413, 0.0144608, 0.0269972, 0.0445872, 0.0677332");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00507184;
      rise_capacitance : 0.00507184;
      fall_capacitance : 0.00503123;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00189967;
      rise_capacitance : 0.00189967;
      fall_capacitance : 0.00187008;
    }
  }
  cell (ND2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0680967;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00220695, 0.00644363, 0.0145342, 0.0271388, 0.0448246, 0.0680967");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00443347;
      rise_capacitance : 0.00438996;
      fall_capacitance : 0.00443347;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00479581;
      rise_capacitance : 0.00479581;
      fall_capacitance : 0.00467866;
    }
  }
  cell (ND3B1M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00207262;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00101929, 0.00108702, 0.00121636, 0.00141786, 0.00170059, 0.00207262");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00048142;
      rise_capacitance : 0.000478647;
      fall_capacitance : 0.00048142;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000519351;
      rise_capacitance : 0.000519351;
      fall_capacitance : 0.000517672;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000615492;
      rise_capacitance : 0.000615492;
      fall_capacitance : 0.000605173;
    }
  }
  cell (ND3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0417644;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00173328, 0.00430726, 0.00922264, 0.0168806, 0.0276255, 0.0417644");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00352855;
      rise_capacitance : 0.00350489;
      fall_capacitance : 0.00352855;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00408797;
      rise_capacitance : 0.00408064;
      fall_capacitance : 0.00408797;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00423683;
      rise_capacitance : 0.00423683;
      fall_capacitance : 0.00420282;
    }
  }
  cell (ND4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00314764;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103863, 0.00117424, 0.0014332, 0.00183665, 0.00240274, 0.00314764");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000477683;
      rise_capacitance : 0.000471596;
      fall_capacitance : 0.000477683;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489116;
      rise_capacitance : 0.000483011;
      fall_capacitance : 0.000489116;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000527887;
      rise_capacitance : 0.000527887;
      fall_capacitance : 0.000525285;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000585931;
      rise_capacitance : 0.000585931;
      fall_capacitance : 0.000575307;
    }
  }
  cell (ND4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)&(!NB)&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00301678;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103628, 0.00116362, 0.00140681, 0.00178568, 0.00231727, 0.00301678");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000527203;
      rise_capacitance : 0.000520421;
      fall_capacitance : 0.000527203;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000628308;
      rise_capacitance : 0.000628308;
      fall_capacitance : 0.000626242;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000583466;
      rise_capacitance : 0.000583466;
      fall_capacitance : 0.000575586;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000553676;
      rise_capacitance : 0.000553676;
      fall_capacitance : 0.000546818;
    }
  }
  cell (ND4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A&B&C&D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0012336;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0010042, 0.00101895, 0.00104712, 0.001091, 0.00115258, 0.0012336");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000410823;
      rise_capacitance : 0.000408903;
      fall_capacitance : 0.000410823;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000430387;
      rise_capacitance : 0.000426448;
      fall_capacitance : 0.000430387;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000443177;
      rise_capacitance : 0.000439415;
      fall_capacitance : 0.000443177;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000433246;
      rise_capacitance : 0.000433246;
      fall_capacitance : 0.00043207;
    }
  }
  cell (NR2B1M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516436;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191099, 0.00510877, 0.0112154, 0.0207292, 0.0340782, 0.0516436");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00426884;
      rise_capacitance : 0.00426884;
      fall_capacitance : 0.00415446;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00192429;
      rise_capacitance : 0.00192429;
      fall_capacitance : 0.00189667;
    }
  }
  cell (NR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0516762;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00191158, 0.00511141, 0.011222, 0.0207419, 0.0340995, 0.0516762");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00413507;
      rise_capacitance : 0.0040632;
      fall_capacitance : 0.00413507;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00388447;
      rise_capacitance : 0.00388447;
      fall_capacitance : 0.00376427;
    }
  }
  cell (NR3B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00334725;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104222, 0.00119043, 0.00147347, 0.00191442, 0.00253312, 0.00334725");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000539089;
      rise_capacitance : 0.000539089;
      fall_capacitance : 0.000529107;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00053175;
      rise_capacitance : 0.00053175;
      fall_capacitance : 0.00052226;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000655164;
      rise_capacitance : 0.000655164;
      fall_capacitance : 0.00064318;
    }
  }
  cell (NR3M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00238563;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102493, 0.00111242, 0.0012795, 0.0015398, 0.00190503, 0.00238563");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000508842;
      rise_capacitance : 0.000507816;
      fall_capacitance : 0.000508842;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000554401;
      rise_capacitance : 0.000554401;
      fall_capacitance : 0.000544502;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000518234;
      rise_capacitance : 0.000518234;
      fall_capacitance : 0.000508287;
    }
  }
  cell (NR4B1M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00538222;
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107883, 0.00135553, 0.00188394, 0.00270718, 0.00386227, 0.00538222");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00106994;
      rise_capacitance : 0.00106994;
      fall_capacitance : 0.00104768;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00101181;
      rise_capacitance : 0.00101181;
      fall_capacitance : 0.000990228;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000829835;
      rise_capacitance : 0.000829835;
      fall_capacitance : 0.000823787;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000682487;
      rise_capacitance : 0.000682487;
      fall_capacitance : 0.000671359;
    }
  }
  cell (NR4B2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((!NA)|(!NB)|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00536347;
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NA";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "NB";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NA";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "NB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00107849, 0.00135401, 0.00188016, 0.00269987, 0.00385003, 0.00536347");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00100659;
      rise_capacitance : 0.00100659;
      fall_capacitance : 0.00098478;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000834211;
      rise_capacitance : 0.000834211;
      fall_capacitance : 0.000827831;
    }
    pin (NA) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000655323;
      rise_capacitance : 0.000655323;
      fall_capacitance : 0.000645957;
    }
    pin (NB) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000615752;
      rise_capacitance : 0.000615752;
      fall_capacitance : 0.000607673;
    }
  }
  cell (NR4M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A|B|C|D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00231307;
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102362, 0.00110653, 0.00126486, 0.00151153, 0.00185764, 0.00231307");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556552;
      rise_capacitance : 0.000555109;
      fall_capacitance : 0.000556552;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000565038;
      rise_capacitance : 0.000565038;
      fall_capacitance : 0.000553574;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000525655;
      rise_capacitance : 0.000525655;
      fall_capacitance : 0.000514268;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000489339;
      rise_capacitance : 0.000489339;
      fall_capacitance : 0.000484416;
    }
  }
  cell (OA211M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00608524;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00109147, 0.00141257, 0.00202575, 0.00298105, 0.00432145, 0.00608524");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000449703;
      rise_capacitance : 0.00044795;
      fall_capacitance : 0.000449703;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000437601;
      rise_capacitance : 0.000437601;
      fall_capacitance : 0.000435916;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000471744;
      rise_capacitance : 0.000471744;
      fall_capacitance : 0.000469375;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000497091;
      rise_capacitance : 0.000497091;
      fall_capacitance : 0.000496744;
    }
  }
  cell (OA21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.11577;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00306451, 0.0103114, 0.0241504, 0.0457109, 0.0759627, 0.11577");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.001934;
      rise_capacitance : 0.001934;
      fall_capacitance : 0.00191868;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0020267;
      rise_capacitance : 0.00199436;
      fall_capacitance : 0.0020267;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00183221;
      rise_capacitance : 0.00183221;
      fall_capacitance : 0.00177632;
    }
  }
  cell (OA221M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128606;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121335, 0.00196226, 0.00339242, 0.00562053, 0.00874682, 0.0128606");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0004798;
      rise_capacitance : 0.0004798;
      fall_capacitance : 0.000477279;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000486935;
      rise_capacitance : 0.000484688;
      fall_capacitance : 0.000486935;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000461578;
      rise_capacitance : 0.000461578;
      fall_capacitance : 0.000459599;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000695615;
      rise_capacitance : 0.000695496;
      fall_capacitance : 0.000695615;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000602456;
      rise_capacitance : 0.000602456;
      fall_capacitance : 0.00059848;
    }
  }
  cell (OA222M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2)&(C1|C2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0122239;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b1 && C2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&C1&!C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && C1 == 1'b0 && C2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!C1&C2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&C1&!C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!C1&C2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C1";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "A1&!A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C2";
        when : "!A1&A2&!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012019, 0.00191061, 0.00326399, 0.00537249, 0.00833096, 0.0122239");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000495305;
      rise_capacitance : 0.000495305;
      fall_capacitance : 0.000492218;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000501329;
      rise_capacitance : 0.000498309;
      fall_capacitance : 0.000501329;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000501886;
      rise_capacitance : 0.000501231;
      fall_capacitance : 0.000501886;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000475689;
      rise_capacitance : 0.000475689;
      fall_capacitance : 0.000471579;
    }
    pin (C1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000469172;
      rise_capacitance : 0.000469172;
      fall_capacitance : 0.00046572;
    }
    pin (C2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000468821;
      rise_capacitance : 0.000468821;
      fall_capacitance : 0.000458372;
    }
  }
  cell (OA22M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.107101;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00290857, 0.00960808, 0.0224018, 0.0423337, 0.0703005, 0.107101");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00228084;
      rise_capacitance : 0.00224332;
      fall_capacitance : 0.00228084;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00212966;
      rise_capacitance : 0.00212966;
      fall_capacitance : 0.00210162;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00235383;
      rise_capacitance : 0.00235383;
      fall_capacitance : 0.00235263;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00221954;
      rise_capacitance : 0.00221954;
      fall_capacitance : 0.00215171;
    }
  }
  cell (OA31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121849;
      timing () {
        related_pin : "A1";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012012, 0.00190744, 0.00325612, 0.00535729, 0.00830548, 0.0121849");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000514011;
      rise_capacitance : 0.000512829;
      fall_capacitance : 0.000514011;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000453241;
      rise_capacitance : 0.000453241;
      fall_capacitance : 0.000448676;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000504519;
      rise_capacitance : 0.000504519;
      fall_capacitance : 0.000501242;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000668666;
      rise_capacitance : 0.000668666;
      fall_capacitance : 0.000651751;
    }
  }
  cell (OA32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0127651;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121163, 0.00195451, 0.00337315, 0.00558332, 0.00868444, 0.0127651");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000556013;
      rise_capacitance : 0.000554748;
      fall_capacitance : 0.000556013;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000573868;
      rise_capacitance : 0.000573868;
      fall_capacitance : 0.000567096;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000479723;
      rise_capacitance : 0.000479723;
      fall_capacitance : 0.000475236;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000517081;
      rise_capacitance : 0.000517081;
      fall_capacitance : 0.000510912;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000527064;
      rise_capacitance : 0.000527064;
      fall_capacitance : 0.000514128;
    }
  }
  cell (OA33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "((A1|A2|A3)&(B1|B2|B3))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131998;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121945, 0.00198978, 0.00346084, 0.00575267, 0.00896837, 0.0131998");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000538697;
      rise_capacitance : 0.000537721;
      fall_capacitance : 0.000538697;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000558665;
      rise_capacitance : 0.000558665;
      fall_capacitance : 0.000552257;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000577893;
      rise_capacitance : 0.000577893;
      fall_capacitance : 0.000572941;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00063852;
      rise_capacitance : 0.00063852;
      fall_capacitance : 0.000633578;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000584744;
      rise_capacitance : 0.000584744;
      fall_capacitance : 0.000573862;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000583984;
      rise_capacitance : 0.000583984;
      fall_capacitance : 0.00057384;
    }
  }
  cell (OAI21M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0482988;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00185082, 0.0048374, 0.0105407, 0.0194262, 0.0318935, 0.0482988");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0040826;
      rise_capacitance : 0.00407063;
      fall_capacitance : 0.0040826;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00399655;
      rise_capacitance : 0.00399655;
      fall_capacitance : 0.0038969;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00427097;
      rise_capacitance : 0.00425019;
      fall_capacitance : 0.00427097;
    }
  }
  cell (OAI31M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0035895;
      timing () {
        related_pin : "A1";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104658, 0.00121009, 0.00152233, 0.00200879, 0.00269135, 0.0035895");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000572195;
      rise_capacitance : 0.000572072;
      fall_capacitance : 0.000572195;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000595448;
      rise_capacitance : 0.000595448;
      fall_capacitance : 0.00058412;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000594989;
      rise_capacitance : 0.000594989;
      fall_capacitance : 0.000587827;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000610326;
      rise_capacitance : 0.000610326;
      fall_capacitance : 0.000609625;
    }
  }
  cell (OAI32M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00246279;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00102631, 0.00111868, 0.00129506, 0.00156986, 0.00195543, 0.00246279");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00065425;
      rise_capacitance : 0.000651192;
      fall_capacitance : 0.00065425;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000608995;
      rise_capacitance : 0.000608995;
      fall_capacitance : 0.000601583;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000573338;
      rise_capacitance : 0.000573338;
      fall_capacitance : 0.000566311;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000651122;
      rise_capacitance : 0.000651122;
      fall_capacitance : 0.00064755;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000613321;
      rise_capacitance : 0.000613321;
      fall_capacitance : 0.000595269;
    }
  }
  cell (OAI33M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!((A1|A2|A3)&(B1|B2|B3)))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00294704;
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A1";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A2";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b1 && B2 == 1'b0 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B1&!B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b1 && B3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&B2&!B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A3";
        sdf_cond : "B1 == 1'b0 && B2 == 1'b0 && B3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B1&!B2&B3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B1";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B2";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b1 && A2 == 1'b0 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A1&!A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b1 && A3 == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&A2&!A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B3";
        sdf_cond : "A1 == 1'b0 && A2 == 1'b0 && A3 == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A1&!A2&A3";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A1";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A2";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "B1&!B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&B2&!B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A3";
        when : "!B1&!B2&B3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B1";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B2";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "A1&!A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&A2&!A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B3";
        when : "!A1&!A2&A3";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00103502, 0.00115797, 0.00139274, 0.00175851, 0.00227172, 0.00294704");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000600189;
      rise_capacitance : 0.000597738;
      fall_capacitance : 0.000600189;
    }
    pin (A2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000562903;
      rise_capacitance : 0.000562903;
      fall_capacitance : 0.000556072;
    }
    pin (A3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000522906;
      rise_capacitance : 0.000522906;
      fall_capacitance : 0.000517957;
    }
    pin (B1) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000515283;
      rise_capacitance : 0.000515283;
      fall_capacitance : 0.00051474;
    }
    pin (B2) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000550328;
      rise_capacitance : 0.000550328;
      fall_capacitance : 0.000537445;
    }
    pin (B3) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000544042;
      rise_capacitance : 0.000544042;
      fall_capacitance : 0.000533966;
    }
  }
  cell (OR2M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112352;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300303, 0.0100341, 0.023461, 0.0443793, 0.0737302, 0.112352");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00217174;
      rise_capacitance : 0.00213899;
      fall_capacitance : 0.00217174;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00204418;
      rise_capacitance : 0.00204418;
      fall_capacitance : 0.00198749;
    }
  }
  cell (OR3M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.112302;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00300213, 0.01003, 0.0234509, 0.0443598, 0.0736976, 0.112302");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00183835;
      rise_capacitance : 0.00181863;
      fall_capacitance : 0.00183835;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146849;
      rise_capacitance : 0.00146849;
      fall_capacitance : 0.00143883;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00156119;
      rise_capacitance : 0.00156119;
      fall_capacitance : 0.00152927;
    }
  }
  cell (OR4M16) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.103297;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00284015, 0.00929946, 0.0216345, 0.0408518, 0.0678159, 0.103297");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00192718;
      rise_capacitance : 0.0019146;
      fall_capacitance : 0.00192718;
    }
    pin (B) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00151838;
      rise_capacitance : 0.00151838;
      fall_capacitance : 0.00148298;
    }
    pin (C) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00146609;
      rise_capacitance : 0.00146609;
      fall_capacitance : 0.00142999;
    }
    pin (D) {
      direction : "input";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0015767;
      rise_capacitance : 0.0015767;
      fall_capacitance : 0.00156168;
    }
  }
  cell (OR6M1) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A|B|C|D|E|F)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.00337482;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "E";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "F";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "E";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "F";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00104272, 0.00119267, 0.00147903, 0.00192516, 0.00255113, 0.00337482");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000533172;
      rise_capacitance : 0.000533172;
      fall_capacitance : 0.00052126;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000525954;
      rise_capacitance : 0.000525954;
      fall_capacitance : 0.000518412;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000467366;
      rise_capacitance : 0.000467366;
      fall_capacitance : 0.000466334;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00046067;
      rise_capacitance : 0.00046067;
      fall_capacitance : 0.000452162;
    }
    pin (E) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000463372;
      rise_capacitance : 0.000463372;
      fall_capacitance : 0.00045529;
    }
    pin (F) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000524573;
      rise_capacitance : 0.000524573;
      fall_capacitance : 0.000519135;
    }
  }
  cell (SDFCQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.012542;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120762, 0.00193641, 0.00332815, 0.00549641, 0.00853872, 0.012542");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000804228;
      rise_capacitance : 0.000804228;
      fall_capacitance : 0.000785983;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000996968;
      rise_capacitance : 0.000996968;
      fall_capacitance : 0.000987114;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00041823;
      rise_capacitance : 0.00041823;
      fall_capacitance : 0.000416603;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119775;
      rise_capacitance : 0.00119775;
      fall_capacitance : 0.00118055;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126221;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120906, 0.00194291, 0.00334431, 0.00552761, 0.00859104, 0.0126221");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000815781;
      rise_capacitance : 0.000815781;
      fall_capacitance : 0.000797931;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000970753;
      rise_capacitance : 0.000970753;
      fall_capacitance : 0.000962313;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00125552;
      rise_capacitance : 0.0012542;
      fall_capacitance : 0.00125552;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000414352;
      rise_capacitance : 0.000414352;
      fall_capacitance : 0.000412923;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115474;
      rise_capacitance : 0.00115474;
      fall_capacitance : 0.00113785;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "!CKB";
        next_state : "D";
      }
    }
  }
  cell (SDFCQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128508;
      timing () {
        related_pin : "CKB";
        timing_sense : non_unate;
        timing_type : falling_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CKB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121318, 0.00196147, 0.00339044, 0.00561671, 0.00874042, 0.0128508");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CKB) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000818322;
      rise_capacitance : 0.000818322;
      fall_capacitance : 0.000798765;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000982311;
      rise_capacitance : 0.000982311;
      fall_capacitance : 0.000972924;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140413;
      rise_capacitance : 0.00137683;
      fall_capacitance : 0.00140413;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000414151;
      rise_capacitance : 0.000414151;
      fall_capacitance : 0.000412733;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011545;
      rise_capacitance : 0.0011545;
      fall_capacitance : 0.00113755;
    }
    ff (IQ,IQN) {
      clocked_on : "(!CKB)";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CKB) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "!CKB";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFEQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0132161;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121975, 0.0019911, 0.00346412, 0.00575902, 0.00897902, 0.0132161");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000700397;
      rise_capacitance : 0.000700397;
      fall_capacitance : 0.000686666;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000448199;
      rise_capacitance : 0.000448199;
      fall_capacitance : 0.000441614;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115228;
      rise_capacitance : 0.00115228;
      fall_capacitance : 0.00112718;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000642413;
      rise_capacitance : 0.000642413;
      fall_capacitance : 0.000632319;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00131432;
      rise_capacitance : 0.00131432;
      fall_capacitance : 0.00129458;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFEQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0126722;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120996, 0.00194698, 0.00335441, 0.00554713, 0.00862377, 0.0126722");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000793249;
      rise_capacitance : 0.000793249;
      fall_capacitance : 0.000778201;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000694146;
      rise_capacitance : 0.000694146;
      fall_capacitance : 0.000689898;
    }
    pin (E) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : load;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00162057;
      rise_capacitance : 0.00162057;
      fall_capacitance : 0.00159644;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0013199;
      rise_capacitance : 0.0013199;
      fall_capacitance : 0.00131794;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000384834;
      rise_capacitance : 0.000384834;
      fall_capacitance : 0.00038386;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00120661;
      rise_capacitance : 0.00120661;
      fall_capacitance : 0.00118282;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|((!SE)&((D&E)|(IQ&(!E)))))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (E) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "(D E) + (!E IQ)";
      }
    }
  }
  cell (SDFQM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0129537;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121503, 0.00196982, 0.0034112, 0.00565679, 0.00880763, 0.0129537");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000766237;
      rise_capacitance : 0.000766237;
      fall_capacitance : 0.000752116;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000993509;
      rise_capacitance : 0.000993509;
      fall_capacitance : 0.000982637;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000408209;
      rise_capacitance : 0.000408209;
      fall_capacitance : 0.000406587;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00116534;
      rise_capacitance : 0.00116534;
      fall_capacitance : 0.00114892;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.013141;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        timing_type : clear;
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012184, 0.00198501, 0.00344898, 0.00572976, 0.00892997, 0.013141");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000811492;
      rise_capacitance : 0.000811492;
      fall_capacitance : 0.000795272;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000953892;
      rise_capacitance : 0.000953892;
      fall_capacitance : 0.000943037;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128523;
      rise_capacitance : 0.00128242;
      fall_capacitance : 0.00128523;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00040919;
      rise_capacitance : 0.00040919;
      fall_capacitance : 0.000407549;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0011533;
      rise_capacitance : 0.0011533;
      fall_capacitance : 0.00113629;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clocked_on : "CK";
        next_state : "D";
      }
    }
  }
  cell (SDFQRSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0131992;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "RB";
        timing_sense : positive_unate;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "RB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121944, 0.00198973, 0.00346072, 0.00575243, 0.00896798, 0.0131992");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000810993;
      rise_capacitance : 0.000810993;
      fall_capacitance : 0.000793617;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000937174;
      rise_capacitance : 0.000937174;
      fall_capacitance : 0.000925746;
    }
    pin (RB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00135632;
      rise_capacitance : 0.00135632;
      fall_capacitance : 0.00134667;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00174168;
      rise_capacitance : 0.00172311;
      fall_capacitance : 0.00174168;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000411102;
      rise_capacitance : 0.000411102;
      fall_capacitance : 0.000409395;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00113753;
      rise_capacitance : 0.00113753;
      fall_capacitance : 0.00111738;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (RB) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clear : "!RB";
        clear_preset_var1 : L;
        clear_preset_var2 : H;
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (SDFQSM2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Q) {
      direction : output;
      function : "IQ";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0128179;
      timing () {
        related_pin : "CK";
        timing_sense : non_unate;
        timing_type : rising_edge;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "SB";
        timing_sense : negative_unate;
        timing_type : preset;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "CK";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "SB";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00121258, 0.0019588, 0.0033838, 0.00560389, 0.00871893, 0.0128179");
          values ( \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0", \
            "0, 0, 0, 0, 0, 0, 0" \
          );
        }
      }
    }
    pin (CK) {
      clock : true;
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000811211;
      rise_capacitance : 0.000811211;
      fall_capacitance : 0.000793778;
    }
    pin (D) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : data;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000937325;
      rise_capacitance : 0.000937325;
      fall_capacitance : 0.000925595;
    }
    pin (SB) {
      direction : input;
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00140731;
      rise_capacitance : 0.00138004;
      fall_capacitance : 0.00140731;
    }
    pin (SD) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_in;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000411187;
      rise_capacitance : 0.000411187;
      fall_capacitance : 0.000409513;
    }
    pin (SE) {
      direction : input;
      input_signal_level : VDD;
      nextstate_type : scan_enable;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00115079;
      rise_capacitance : 0.00115079;
      fall_capacitance : 0.00113351;
    }
    ff (IQ,IQN) {
      clocked_on : "CK";
      next_state : "((SE&SD)|(D&(!SE)))";
    }
    test_cell () {
      pin (Q) {
        direction : output;
        function : "IQ";
        signal_type : test_scan_out;
      }
      pin (CK) {
        direction : input;
      }
      pin (D) {
        direction : input;
      }
      pin (SB) {
        direction : input;
      }
      pin (SD) {
        direction : input;
        signal_type : test_scan_in;
      }
      pin (SE) {
        direction : input;
        signal_type : test_scan_enable;
      }
      ff (IQ,IQN) {
        clocked_on : "CK";
        next_state : "D";
        preset : "!SB";
      }
    }
  }
  cell (XNR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0114799;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00118852, 0.00185025, 0.00311391, 0.00508265, 0.00784501, 0.0114799");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00128104;
      rise_capacitance : 0.00128104;
      fall_capacitance : 0.00126087;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000739918;
      rise_capacitance : 0.000739918;
      fall_capacitance : 0.000728162;
    }
  }
  cell (XNR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0119205;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00119644, 0.00188599, 0.00320279, 0.00525429, 0.00813279, 0.0119205");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000784338;
      rise_capacitance : 0.000784338;
      fall_capacitance : 0.000773552;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00133492;
      rise_capacitance : 0.00133492;
      fall_capacitance : 0.00130848;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00134257;
      rise_capacitance : 0.00134257;
      fall_capacitance : 0.00131637;
    }
  }
  cell (XNR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(!(A^B^C^D))";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0134135;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012233, 0.00200712, 0.00350394, 0.00583592, 0.00910795, 0.0134135");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00132459;
      rise_capacitance : 0.00132459;
      fall_capacitance : 0.00129706;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000800677;
      rise_capacitance : 0.000800677;
      fall_capacitance : 0.000787464;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000775063;
      rise_capacitance : 0.000775063;
      fall_capacitance : 0.000760316;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138533;
      rise_capacitance : 0.00138533;
      fall_capacitance : 0.00136092;
    }
  }
  cell (XOR2M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0121806;
      timing () {
        related_pin : "A";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : positive_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        timing_sense : negative_unate;
        timing_type : combinational;
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00120112, 0.00190709, 0.00325525, 0.00535562, 0.00830267, 0.0121806");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00137004;
      rise_capacitance : 0.00137004;
      fall_capacitance : 0.00134317;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000762303;
      rise_capacitance : 0.000762303;
      fall_capacitance : 0.000747091;
    }
  }
  cell (XOR3M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0130745;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.0012172, 0.00197962, 0.00343556, 0.00570385, 0.00888653, 0.0130745");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000899779;
      rise_capacitance : 0.000899779;
      fall_capacitance : 0.000885191;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.0014162;
      rise_capacitance : 0.0014162;
      fall_capacitance : 0.00139378;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00119149;
      rise_capacitance : 0.00119149;
      fall_capacitance : 0.00117603;
    }
  }
  cell (XOR4M2) {
    area : 0;
    pg_pin (VDD) {
      pg_type : primary_power;
      voltage_name : "VDD";
    }
    pg_pin (VSS) {
      pg_type : primary_ground;
      voltage_name : "VSS";
    }
    pin (Z) {
      direction : "output";
      function : "(A^B^C^D)";
      power_down_function : "(!VDD) + (VSS)";
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_capacitance : 0.0133628;
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "B&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "A";
        sdf_cond : "B == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!B&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b1 && C == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&C&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "B";
        sdf_cond : "A == 1'b0 && C == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!C&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b1 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b1 && B == 1'b0 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b1 && D == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "C";
        sdf_cond : "A == 1'b0 && B == 1'b0 && D == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&D";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b1";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b0";
        timing_sense : positive_unate;
        timing_type : combinational;
        when : "!A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b1 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b1 && B == 1'b0 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "A&!B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b1 && C == 1'b0";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&B&!C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      timing () {
        related_pin : "D";
        sdf_cond : "A == 1'b0 && B == 1'b0 && C == 1'b1";
        timing_sense : negative_unate;
        timing_type : combinational;
        when : "!A&!B&C";
        cell_rise (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        rise_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        cell_fall (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_transition (delay_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "A";
        when : "!B&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "B";
        when : "!A&!C&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "C";
        when : "!A&!B&!D";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
      internal_power () {
        related_pin : "D";
        when : "!A&!B&!C";
        related_pg_pin : VDD;
        rise_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
        fall_power (power_template_generic_7x7) {
          index_1 ("0.002, 0.0154552, 0.062686, 0.15288, 0.293398, 0.490561, 0.75");
          index_2 ("0.001, 0.00122239, 0.00200301, 0.00349372, 0.00581617, 0.00907484, 0.0133628");
          values ( \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  ", \
            " ,  ,  ,  ,  ,  ,  " \
          );
        }
      }
    }
    pin (A) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00132616;
      rise_capacitance : 0.00132616;
      fall_capacitance : 0.00129796;
    }
    pin (B) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000794668;
      rise_capacitance : 0.000794668;
      fall_capacitance : 0.000781139;
    }
    pin (C) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.000726909;
      rise_capacitance : 0.000726909;
      fall_capacitance : 0.000710486;
    }
    pin (D) {
      direction : "input";
      input_signal_level : VDD;
      related_ground_pin : VSS;
      related_power_pin : VDD;
      max_transition : 0.75;
      capacitance : 0.00138533;
      rise_capacitance : 0.00138533;
      fall_capacitance : 0.0013597;
    }
  }
}
